---
- name: Prepare steps
  block:
    - name: Update deb-based system
      apt:
        name: '*'
        state: latest
        update_cache: true
      when: ansible_os_family == "Debian"

    - name: Install necessary packages
      apt:
        name: 
          - ufw
          - bash-completion
          # - duf
          - vim
        state: latest
        update_cache: true
      when: ansible_os_family == "Debian"

    - name: Disable ufw IPv6
      become: true
      lineinfile:
        dest: /etc/default/ufw
        regexp: ^IPV6=
        line: IPV6=no
        state: present

    - name: Allow SSH
      ufw:
        rule: allow
        src: '{{ SERVER_SUBNET }}'
        port: '{{ SSH_PORT }}'
        proto: tcp
        state: enabled

  tags: prepare
  become: true


- name: Config OpenVPN
  block:
    - name: Install OpenVPN
      apt:
        name: openvpn
        state: latest
        update_cache: true
      when: ansible_os_family == "Debian"

    - name: Apply config
      copy:
        src: '{{ OPENVPN_CONFIG_PATH }}'
        dest: /etc/openvpn/client/client.conf
        mode: 0400

    - name: Allow SSH from VPN
      ufw:
        rule: allow
        src: '{{ VPN_SUBNET }}'
        port: '{{ SSH_PORT }}'
        proto: tcp
        state: enabled

    - name: Allow HTTP(S) from VPN
      ufw:
        rule: allow
        src: '{{ VPN_SUBNET }}'
        port: '{{ item }}'
        state: reloaded
      with_items:
        - 80
        - 443

    - name: Allow out from tun0
      ufw:
        rule: allow
        interface: tun0
        direction: out
        state: reloaded

    - name: Allow HTTP(S)
      ufw:
        rule: allow
        interface: eth0
        direction: out
        port: '{{ item }}'
        proto: udp
        state: reloaded
      with_items:
        - 1194
        - 53

    - name: Outgoing deny
      ufw:
        state: enabled
        direction: outgoing
        policy: deny

    - name: Incoming deny
      ufw:
        state: enabled
        direction: incoming
        policy: deny

    - name: Start OpenVPN
      service:
        name: openvpn-client@client.service
        state: started
        enabled: true

  tags: openvpn
  become: true


- name: Configure external disk
  block:
    - name: Make dir for mountpoint
      file:
        path: /mnt/{{ DISK_LABEL }}
        state: directory
        mode: 0755
        owner: root

    - name: Mount external disk
      mount:
        path: /mnt/{{ DISK_LABEL }}
        src: LABEL={{ DISK_LABEL }}
        fstype: ext4
        opts: defaults
        state: mounted
      tags: vagrant

    - name: Make disk share group
      group:
        name: '{{ SHARE_DISK_GROUP }}'
        state: present

    - name: Make disk share user
      user:
        name: '{{ SHARE_DISK_USER }}'
        shell: /usr/sbin/nologin
        groups: '{{ SHARE_DISK_GROUP }}'

    - name: Make public share user
      user:
        name: '{{ SHARE_PUBLIC_USER }}'
        shell: /usr/sbin/nologin

    - name: Make dir for random files
      file:
        path: /mnt/{{ DISK_LABEL }}/files
        state: directory
        recurse: true
        mode: 0775
        owner: '{{ SHARE_DISK_USER }}'
        group: '{{ SHARE_DISK_GROUP }}'

    - name: Make dir for public user
      file:
        path: /mnt/{{ DISK_LABEL }}/share
        state: directory
        mode: 0755
        owner: root
        group: root

    - name: Make dir for public user
      file:
        path: /mnt/{{ DISK_LABEL }}/share/files
        state: directory
        mode: 0755
        owner: '{{ SHARE_PUBLIC_USER }}'
        group: '{{ SHARE_PUBLIC_USER }}'

    - name: Apply sftp config
      template:
        src: 05_sftp.j2
        dest: /etc/ssh/sshd_config.d/05_sftp.conf
        mode: 0600
      notify: Restart sshd

  tags: filesharing
  become: true
