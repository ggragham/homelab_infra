---
- name: Install and config webserver
  block:
    - name: Ensure www-data user is present
      user:
        name: www-data
        uid: 33
        comment: www-data
        home: /var/www
        shell: /usr/sbin/nologin
        state: present
      become: true

    # Bare Metal Install
    - name: Nginx bare metal install
      block:
        - name: Install nginx
          apt:
            name: nginx
            state: latest
            update_cache: true
          when: ansible_os_family == "Debian"

        - name: Remove default site config
          file:
            path: '{{ NGINX_SITES_ENABLED_PATH }}/default'
            state: absent
          when: not NGINX_DEPLOY_DEMO

        - name: Deploy demo page
          block:
            - name: Apply demo page nginx config
              template:
                src: nginx_default.j2
                dest: '{{ NGINX_SITES_AVAILABLE_PATH }}/default'
                mode: 0644

            - name: Enable demo page nginx config
              file:
                src: '{{ NGINX_SITES_AVAILABLE_PATH }}/default'
                dest: '{{ NGINX_SITES_ENABLED_PATH }}/default'
                state: link
                mode: 0644

          when: NGINX_DEPLOY_DEMO

      when: not NGINX_DOCKERIZED

    # Dockerized install
    - name: Nginx containerized install
      block:
        - name: Check Docker existence
          block:
            - name: Check Docker binary existence
              stat:
                path: /usr/bin/docker
              register: docker_installed
            - name: Show error if Docker not isntalled
              fail:
                msg: Docker is not installed
              when: not docker_installed.stat.exists

        - name: Create Nginx directory struct
          file:
            path: '{{ item.path }}'
            state: directory
            owner: '{{ NGINX_USER }}'
            group: root
            mode: 0755
          loop:
            - {path: '{{ DEFAULT_WWW_PATH }}', when: '{{ NGINX_DEPLOY_DEMO }}'}
            - {path: '{{ NGINX_LOG_PATH }}', when: true}
            - {path: '{{ NGINX_DOCKER_PATH }}', when: true}
            - {path: '{{ NGINX_DOCKER_CONF_PATH }}', when: true}
            - {path: '{{ NGINX_SITES_ENABLED_PATH }}', when: true}
            - {path: '{{ NGINX_SNIPPETS_PATH }}', when: true}
          when: item.when | bool
          loop_control:
            label: '{{ item.path }}'

        - name: Create Nginx ssl directory
          file:
            path: '{{ NGINX_DOCKER_SSL_PATH }}'
            state: directory
            owner: '{{ NGINX_USER }}'
            group: root
            mode: 0500

        - name: Apply Nginx docker config
          copy:
            src: default.conf
            dest: '{{ NGINX_DOCKER_CONF_PATH }}/default.conf'
            owner: '{{ NGINX_USER }}'
            group: root
            mode: 0644

        - name: Apply Nginx Docker Compose template
          template:
            src: docker_compose.yml.j2
            dest: '{{ NGINX_DOCKER_PATH }}/docker-compose.yml'
            owner: '{{ NGINX_USER }}'
            group: root
            mode: 0644

        - name: Apply demo page nginx config
          template:
            src: nginx_default.j2
            dest: '{{ NGINX_SITES_ENABLED_PATH }}/default'
            mode: 0644
          when: NGINX_DEPLOY_DEMO

      when: NGINX_DOCKERIZED

    - name: Deploy homepage
      template:
        src: index.html
        dest: '{{ DEFAULT_WWW_PATH }}/index.html'
        mode: 0644
      when: NGINX_DEPLOY_DEMO

    - name: Copy ssl cert
      copy:
        src: '{{ SSL_CERT_PATH }}'
        dest: '{{ NGINX_SSL_CERT_PATH }}'
        owner: "{{ (NGINX_DOCKERIZED) | ternary(NGINX_USER, 'root') }}"
        mode: 0400

    - name: Copy ssl key
      copy:
        src: '{{ SSL_KEY_PATH }}'
        dest: '{{ NGINX_SSL_KEY_PATH }}'
        owner: "{{ (NGINX_DOCKERIZED) | ternary(NGINX_USER, 'root') }}"
        mode: 0400

    - name: Copy dh group
      copy:
        src: '{{ SSL_DH_PATH }}'
        dest: '{{ NGINX_SSL_DH_PATH }}'
        owner: "{{ (NGINX_DOCKERIZED) | ternary(NGINX_USER, 'root') }}"
        mode: 0400

    - name: Apply ssl config
      template:
        src: ssl-params.j2
        dest: '{{ NGINX_SNIPPETS_PATH }}/ssl-params.conf'
        mode: 0644

    - name: Apply headers config
      template:
        src: headers.conf.j2
        dest: '{{ NGINX_SNIPPETS_PATH }}/headers.conf'
        mode: 0644

    - name: Start Nginx
      block:
        - name: Start Nginx service
          service:
            name: nginx
            state: restarted
          when: not NGINX_DOCKERIZED

        - name: Restart Nginx
          community.docker.docker_compose_v2:
            project_src: '{{ NGINX_DOCKER_PATH }}'
            state: present
            recreate: always
            remove_orphans: true
          when: NGINX_DOCKERIZED

  become: true
