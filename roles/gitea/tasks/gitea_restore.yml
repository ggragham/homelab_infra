---
- name: Set Gitea Restore vars
  set_fact:
    gitea_dump_file: /tmp/{{ gitea_dump_name }}
    gitea_extract_dir: /tmp/gitea_dump
    gitea_etc_dir: '{{ GITEA_CONFIG_PATH }}'
    gitea_data_dir: '{{ GITEA_DATA_PATH }}'
    gitea_repos_dir: '{{ GITEA_DATA_PATH }}/data/repositories'

- name: Copy Gitea dump to host
  copy:
    src: ./assets/{{ gitea_dump_name }}
    dest: '{{ gitea_dump_file }}'
    owner: '{{ GITEA_USER }}'
    group: root
    mode: '0644'
  become: true

- name: Ensure unzip is present
  package:
    name: unzip
    state: present
  become: true

- name: Ensure clean Gitea extract dir
  file:
    path: '{{ gitea_extract_dir }}'
    state: absent
  become: true

- name: Re-create Gitea extract dir
  file:
    path: '{{ gitea_extract_dir }}'
    state: directory
    owner: '{{ GITEA_USER }}'
    group: '{{ GITEA_USER }}'
    mode: '0755'
  become: true

- name: Extract Gitea dump
  unarchive:
    src: '{{ gitea_dump_file }}'
    dest: '{{ gitea_extract_dir }}'
    owner: '{{ GITEA_USER }}'
    group: '{{ GITEA_USER }}'
    mode: '0755'
    remote_src: true
  become: true

- name: Stop Gitea
  block:
    - name: Stop Gitea (Bare Metal)
      service:
        name: gitea
        state: stopped
      become: true
      when: not GITEA_DOCKERIZED

    - name: Stop Gitea (Docker)
      community.docker.docker_compose_v2:
        project_src: '{{ GITEA_DOCKER_PATH }}'
        services: '{{ GITEA_DOCKER_SERVICE_NAME }}'
        state: absent
      when: GITEA_DOCKERIZED

- name: Ensure Gitea target dirs exist
  file:
    path: '{{ item }}'
    state: directory
    owner: '{{ GITEA_USER }}'
    group: '{{ GITEA_USER }}'
    mode: '0755'
  loop:
    - '{{ gitea_etc_dir }}'
    - '{{ gitea_data_dir }}'
    - '{{ gitea_repos_dir }}'
  become: true

- name: Restore Gitea config
  copy:
    src: '{{ gitea_extract_dir }}/app.ini'
    dest: '{{ gitea_etc_dir }}/app.ini'
    owner: '{{ GITEA_USER }}'
    group: '{{ GITEA_USER }}'
    mode: '0600'
    remote_src: true
  become: true

- name: Restore Gitea data dir
  copy:
    src: '{{ gitea_extract_dir }}/data/'
    dest: '{{ gitea_data_dir }}'
    owner: '{{ GITEA_USER }}'
    group: '{{ GITEA_USER }}'
    mode: '0755'
    remote_src: true
  become: true

- name: Restore Gitea repos
  copy:
    src: '{{ gitea_extract_dir }}/repos/'
    dest: '{{ gitea_repos_dir }}/'
    owner: '{{ GITEA_USER }}'
    group: '{{ GITEA_USER }}'
    mode: '0755'
    remote_src: true
  become: true

- name: Restore MariaDB data
  block:
    - name: Copy Gitea SQL dump to MariaDB container
      community.docker.docker_container_copy_into:
        container: '{{ GITEA_DB_CONTAINER_NAME }}'
        path: '{{ gitea_extract_dir }}/gitea-db.sql'
        container_path: /tmp/gitea-db.sql

    - name: Drop & recreate Gitea database {{ GITEA_DB_NAME }}
      community.docker.docker_compose_v2_exec:
        project_src: '{{ GITEA_DOCKER_PATH }}'
        service: '{{ GITEA_DOCKER_DB_SERVICE_NAME }}'
        command: >
          sh -lc "mariadb -uroot -p'{{ GITEA_DB_ROOT_PASSWORD }}' -e
          \"DROP DATABASE IF EXISTS \`{{ GITEA_DB_NAME }}\`;
             CREATE DATABASE \`{{ GITEA_DB_NAME }}\`
             CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\""

    - name: Restore Gitea MariaDB data
      community.docker.docker_compose_v2_exec:
        project_src: '{{ GITEA_DOCKER_PATH }}'
        service: '{{ GITEA_DOCKER_DB_SERVICE_NAME }}'
        command: >
          sh -lc "mariadb -u{{ GITEA_DB_USER }} -p'{{ GITEA_DB_PASSWORD }}' {{ GITEA_DB_NAME }}
          < /tmp/gitea-db.sql"
      no_log: true

  when: gitea_restore_db | bool

- name: Start Gitea
  block:
    - name: Start Gitea (Bare Metal)
      service:
        name: gitea
        state: started
      become: true
      when: not GITEA_DOCKERIZED

    - name: Start Gitea (Docker)
      community.docker.docker_compose_v2:
        project_src: '{{ GITEA_DOCKER_PATH }}'
        services: '{{ GITEA_DOCKER_SERVICE_NAME }}'
        state: present
      when: GITEA_DOCKERIZED

- name: Regenerate Gitea hooks
  block:
    - name: Regenerate Gitea Hooks (Bare Metal)
      command: '{{ GITEA_PATH }}/gitea -c /etc/gitea/app.ini admin regenerate hooks'
      become: true
      become_user: '{{ GITEA_USER }}'
      when: not GITEA_DOCKERIZED

    - name: Regenerate Gitea Hooks (Docker)
      community.docker.docker_compose_v2_exec:
        project_src: '{{ GITEA_DOCKER_PATH }}'
        service: '{{ GITEA_DOCKER_SERVICE_NAME }}'
        command: /usr/local/bin/gitea -c /etc/gitea/app.ini admin regenerate hooks
      when: GITEA_DOCKERIZED
