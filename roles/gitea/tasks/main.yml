---
- name: Fail if action is invalid
  fail:
    msg: Invalid action '{{ action }}'. Must be either 'backup' or 'restore'.
  when: action is defined and action not in ['backup', 'restore']

- name: Gitea
  block:
    - name: Create Gitea system user
      user:
        name: '{{ GITEA_USER }}'
        uid: '{{ GITEA_ID }}'
        comment: Git Version Control
        home: /home/{{ GITEA_USER }}
        shell: /bin/bash
        password_lock: true
      become: true

    - name: Install and configure Gitea
      include_tasks: gitea.yml
      when: GITEA_DEPLOY

    - name: Gitea Health Check
      block:
        - name: Wait for service to start
          uri:
            url: http://{{ GITEA_DOMAIN }}/api/healthz
            method: GET
            status_code: 200
            validate_certs: false
          register: result
          until: (result.status is defined) and (result.status == 200)
          retries: 30
          delay: 10
        - name: Fail if service is not running
          fail:
            msg: Service did not start in time
          when: result.failed
      delegate_to: localhost

    - name: Add admin user
      block:
        - name: Create admin user
          shell: >
            {{ (GITEA_DOCKERIZED) | ternary('docker exec -i ' + GITEA_CONTAINER_NAME + ' /app/gitea/gitea',
            'sudo -u ' + GITEA_USER + GITEA_PATH + '/gitea') }}
            admin user create --username {{ GITEA_ADMIN_USER }}
            --admin --password {{ GITEA_ADMIN_PASSWORD }}
            --email {{ GITEA_ADMIN_EMAIL }}
            -c {{ (GITEA_DOCKERIZED) | ternary('/etc/gitea', GITEA_CONFIG_PATH) }}/app.ini
          no_log: true
      rescue:
        - debug:
            msg: Sucksessfully failed
      when: GITEA_DEPLOY

    - name: Remove runner
      file:
        path: '{{ ACT_DATA_PATH }}/.runner'
        state: absent
      when: ACTRUNNER_REREGISTER_RUNNER
      become: true

    - name: Check if runner exists
      stat:
        path: '{{ ACT_DATA_PATH }}/.runner'
      register: runner_file

    - name: Generate and distribute runner token
      block:
        - name: Generate runner token
          shell: >
            docker exec {{ GITEA_CONTAINER_NAME }} \
            /app/gitea/gitea actions generate-runner-token \
            -c /etc/gitea/app.ini | tail -n 1
          register: act_token
          delegate_to: '{{ GITEA_CONTROLLER }}'

        - name: Set runner token globally
          set_fact:
            runner_token: '{{ act_token.stdout }}'
          delegate_to: localhost

        - name: Distribute runner token to ActRunner servers
          set_fact:
            runner_token: '{{ runner_token }}'
          delegate_to: '{{ item }}'
          delegate_facts: true
          run_once: true
          when: ACTRUNNER_DEPLOY
          loop: '{{ ACTRUNNER_CONTROLLERS }}'

        - name: Install Act Runner
          include_tasks: actrunner.yml
          when: ACTRUNNER_DEPLOY

      when: not runner_file.stat.exists

  when: action is not defined

- name: Gitea Backup or Restore
  block:
    - name: Gitea Backup
      include_tasks: gitea_backup.yml
      when:
        - GITEA_DEPLOY
        - action | default('') == 'backup'

    - name: Gitea Restore
      include_tasks: gitea_restore.yml
      when:
        - GITEA_DEPLOY
        - action | default('') == 'restore'
