---
- name: Docker
  block:
    - name: Check if Docker exists
      stat:
        path: /usr/bin/docker
      register: docker_installed

    - name: Install Docker
      block:
        - name: Install docker to Debian-based system
          include_tasks: debian_install.yml
          when: ansible_os_family == 'Debian'

        - name: Install docker to RedHat-based system
          include_tasks: redhat_install.yml
          when: ansible_os_family == 'RedHat'

        - name: Create Docker group
          group:
            name: docker
            state: present
          become: true

        - name: Add user to docker group
          user:
            name: '{{ USERNAME }}'
            groups: docker
            append: true
          become: true

        - name: Restart Docker service
          service:
            name: docker
            enabled: true
            state: restarted
          become: true

        # Ignore the warning about reset_connection.
        # It functions correctly in this context.
        - name: Apply user changes
          meta: reset_connection

      when: not docker_installed.stat.exists

- name: Ensure docker network exists
  block:
    - name: Create Docker network
      docker_network:
        name: '{{ DOCKER_NETWORK_NAME }}'
        driver: bridge
        driver_options:
          com.docker.network.bridge.name: br-{{ DOCKER_BRIDGE_NAME }}
        enable_ipv6: false
        ipam_config:
          - subnet: '{{ DOCKER_SERVICES_NETWORK_SUBNET }}'
        state: present

  rescue:
    - name: Restart Docker service
      service:
        name: docker
        state: restarted
      become: true

    - name: Retry create Docker network after docker restart
      docker_network:
        name: '{{ DOCKER_NETWORK_NAME }}'
        driver: bridge
        driver_options:
          com.docker.network.bridge.name: br-{{ DOCKER_BRIDGE_NAME }}
        enable_ipv6: false
        ipam_config:
          - subnet: '{{ DOCKER_SERVICES_NETWORK_SUBNET }}'
        state: present

  tags: docker
